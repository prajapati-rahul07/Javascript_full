const num= [1,4,6,565,56]
//console.log(num.length);

const array1= ["rahul","priyanka","priya"]
//console.log(array1.reduceRight);

const array2= new Array("rahul", 1,23,true)
//console.log(array2);


num.push(232)
//console.log(num)

const a1= num
// console.log("A",a1)

const a2= num.slice(1,3)
// console.log("B",a2);

const a3= num.splice(1,3)
// console.log(num);
// console.log("C",a3);


// slice()  doesn't changes the array on which its applied 

// splice()  changes the array on which it's applied meaning it pulls out the elements in a seperate array and the rest of the elements in the different array (two different arrays re generated by using splice)






//  More on Arrays 

const marvel_heros= ["ironman","thor","spiderman"] 

const dc_heros = ["aquaman","superman","batman"] 


//marvel_heros.push(dc_heros)

const allHeros = marvel_heros.concat(dc_heros)

// console.log(marvel_heros[3][0].toUpperCase());
// console.log(marvel_heros)

// console.log(allHeros);










/*---------------------------------------------------------------------------------- */

/*  SPREAD OPERATOR */ // Another way to concatenate arrays 

const allSuperHeros = [...marvel_heros, ...dc_heros]
//console.log(allSuperHeros);



// what if array ke andr array ,  array ke andr array ke andar array  then we just convert them into a single array using flat(here we write the depth upto which we need the array to be considered in a single one,(and if we are not sure about the depth we just write infinity as the depth, it would take all the elements ))

const array_inside_array= [1,2,[4,56,67],[23,54,43,[67,9]]]


const array_after_using_flat= array_inside_array.flat(Infinity)

console.log(array_after_using_flat);

